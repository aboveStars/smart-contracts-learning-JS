{
  "address": "0x8817995C6e4aD0d20D0B4e60Ebb4268AbC597aA0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x37333df81645d37ab1554f28b4bdced08302bfb7dfd4e717281caf591ee81d2d",
  "receipt": {
    "to": null,
    "from": "0xAE8dC4c95CCc79b39445fe9BD457FA22dbE87Ae7",
    "contractAddress": "0x8817995C6e4aD0d20D0B4e60Ebb4268AbC597aA0",
    "transactionIndex": 64,
    "gasUsed": "1058993",
    "logsBloom": "0x
    "blockHash": "0x1d9791b7ff975fcf3b07874a8d7d75f8bf58171eb3ee9e6b36d010eadfa24229",
    "transactionHash": "0x37333df81645d37ab1554f28b4bdced08302bfb7dfd4e717281caf591ee81d2d",
    "logs": [],
    "blockNumber": 8223342,
    "cumulativeGasUsed": "12385349",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "09386a8a4a91d659dd3b424fb16b4cf3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"aboveStars\",\"details\":\"Contract uses library.\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"Uses library.\"}},\"title\":\"Contract for funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"To fund...\"}},\"notice\":\"It is just a demo\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// pragma\\npragma solidity ^0.8.0;\\n// imports\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n// interfaces...\\n\\n/** @title Contract for funding\\n * @author aboveStars\\n * @notice It is just a demo\\n * @dev Contract uses library.\\n */\\n\\ncontract FundMe {\\n    // Type Declarations...\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    uint256 public constant FEE = 50 * 1e18;\\n    address[] public s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Modifiers...\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /**\\n     * @notice To fund...\\n     * @dev Uses library.\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= FEE,\\n            \\\"FUND MORE BABE\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withDraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex <= s_funders.length - 1;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings CANT be in memory... (for s_addressToAmountFunded)\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex <= funders.length - 1;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xd7cf901ce2e03cdeb40f44e6d3cc44f2395961f24c7032372e3342a0308a889d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 1e10); // because price feed gives us with 8 deciamls, we converted it to 18 decimals.\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18; // (ethPrice/1e18)\\n        return ethAmountInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0x5e5c78e33d293501237b644b36be262d5c8888adaeca3735b2633bb0e2de79b7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200134a3803806200134a833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111cb6200017f60003960008181610239015281816104c5015261063e01526111cb6000f3fe6080604052600436106100865760003560e01c80639e87a5cd116100595780639e87a5cd14610147578063b60d428814610172578063be2693f01461017c578063c57981b514610186578063d7b4750c146101b157610086565b80630343fb251461008b5780630fdb1c10146100c857806354861af7146100df578063893d20e81461011c575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b25565b6101ee565b6040516100bf9190610b6b565b60405180910390f35b3480156100d457600080fd5b506100dd610237565b005b3480156100eb57600080fd5b5061010660048036038101906101019190610bb2565b610482565b6040516101139190610bee565b60405180910390f35b34801561012857600080fd5b506101316104c1565b60405161013e9190610bee565b60405180910390f35b34801561015357600080fd5b5061015c6104e9565b6040516101699190610c68565b60405180910390f35b61017a610513565b005b61018461063c565b005b34801561019257600080fd5b5061019b6108eb565b6040516101a89190610b6b565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190610bb2565b6108f8565b6040516101e59190610bee565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102bc576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60016000805490506102d19190610cb2565b81116103725760008082815481106102ec576102eb610ce6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036a90610d15565b9150506102bf565b50600067ffffffffffffffff81111561038e5761038d610d5e565b5b6040519080825280602002602001820160405280156103bc5781602001602082028036833780820191505090505b50600090805190602001906103d2929190610a1b565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103f990610dbe565b60006040518083038185875af1925050503d8060008114610436576040519150601f19603f3d011682016040523d82523d6000602084013e61043b565b606091505b505090508061047f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047690610e30565b60405180910390fd5b50565b6000818154811061049257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610552600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461093f90919063ffffffff16565b1015610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a90610e9c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106c1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561074457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106fa575b5050505050905060005b6001825161075c9190610cb2565b81116107da57600082828151811061077757610776610ce6565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107d290610d15565b91505061074e565b50600067ffffffffffffffff8111156107f6576107f5610d5e565b5b6040519080825280602002602001820160405280156108245781602001602082028036833780820191505090505b506000908051906020019061083a929190610a1b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161086190610dbe565b60006040518083038185875af1925050503d806000811461089e576040519150601f19603f3d011682016040523d82523d6000602084013e6108a3565b606091505b50509050806108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de90610e30565b60405180910390fd5b5050565b6802b5e3af16b188000081565b600080828154811061090d5761090c610ce6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061094b8361097b565b90506000670de0b6b3a764000085836109649190610ebc565b61096e9190610f45565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109c457600080fd5b505afa1580156109d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fc9190611003565b5050509150506402540be40081610a13919061107e565b915050919050565b828054828255906000526020600020908101928215610a94579160200282015b82811115610a935782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a3b565b5b509050610aa19190610aa5565b5090565b5b80821115610abe576000816000905550600101610aa6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610af282610ac7565b9050919050565b610b0281610ae7565b8114610b0d57600080fd5b50565b600081359050610b1f81610af9565b92915050565b600060208284031215610b3b57610b3a610ac2565b5b6000610b4984828501610b10565b91505092915050565b6000819050919050565b610b6581610b52565b82525050565b6000602082019050610b806000830184610b5c565b92915050565b610b8f81610b52565b8114610b9a57600080fd5b50565b600081359050610bac81610b86565b92915050565b600060208284031215610bc857610bc7610ac2565b5b6000610bd684828501610b9d565b91505092915050565b610be881610ae7565b82525050565b6000602082019050610c036000830184610bdf565b92915050565b6000819050919050565b6000610c2e610c29610c2484610ac7565b610c09565b610ac7565b9050919050565b6000610c4082610c13565b9050919050565b6000610c5282610c35565b9050919050565b610c6281610c47565b82525050565b6000602082019050610c7d6000830184610c59565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cbd82610b52565b9150610cc883610b52565b925082821015610cdb57610cda610c83565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d2082610b52565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d5357610d52610c83565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610da8600083610d8d565b9150610db382610d98565b600082019050919050565b6000610dc982610d9b565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610e1a600b83610dd3565b9150610e2582610de4565b602082019050919050565b60006020820190508181036000830152610e4981610e0d565b9050919050565b7f46554e44204d4f52452042414245000000000000000000000000000000000000600082015250565b6000610e86600e83610dd3565b9150610e9182610e50565b602082019050919050565b60006020820190508181036000830152610eb581610e79565b9050919050565b6000610ec782610b52565b9150610ed283610b52565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0b57610f0a610c83565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f5082610b52565b9150610f5b83610b52565b925082610f6b57610f6a610f16565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f9581610f76565b8114610fa057600080fd5b50565b600081519050610fb281610f8c565b92915050565b6000819050919050565b610fcb81610fb8565b8114610fd657600080fd5b50565b600081519050610fe881610fc2565b92915050565b600081519050610ffd81610b86565b92915050565b600080600080600060a0868803121561101f5761101e610ac2565b5b600061102d88828901610fa3565b955050602061103e88828901610fd9565b945050604061104f88828901610fee565b935050606061106088828901610fee565b925050608061107188828901610fa3565b9150509295509295909350565b600061108982610fb8565b915061109483610fb8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110d3576110d2610c83565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111105761110f610c83565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561114d5761114c610c83565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561118a57611189610c83565b5b82820290509291505056fea26469706673582212201b9aa5aeaff4588015aec24710ec06fae6fbd7c171b0d4dfd7bf63930a5fef7564736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80639e87a5cd116100595780639e87a5cd14610147578063b60d428814610172578063be2693f01461017c578063c57981b514610186578063d7b4750c146101b157610086565b80630343fb251461008b5780630fdb1c10146100c857806354861af7146100df578063893d20e81461011c575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b25565b6101ee565b6040516100bf9190610b6b565b60405180910390f35b3480156100d457600080fd5b506100dd610237565b005b3480156100eb57600080fd5b5061010660048036038101906101019190610bb2565b610482565b6040516101139190610bee565b60405180910390f35b34801561012857600080fd5b506101316104c1565b60405161013e9190610bee565b60405180910390f35b34801561015357600080fd5b5061015c6104e9565b6040516101699190610c68565b60405180910390f35b61017a610513565b005b61018461063c565b005b34801561019257600080fd5b5061019b6108eb565b6040516101a89190610b6b565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190610bb2565b6108f8565b6040516101e59190610bee565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102bc576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60016000805490506102d19190610cb2565b81116103725760008082815481106102ec576102eb610ce6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036a90610d15565b9150506102bf565b50600067ffffffffffffffff81111561038e5761038d610d5e565b5b6040519080825280602002602001820160405280156103bc5781602001602082028036833780820191505090505b50600090805190602001906103d2929190610a1b565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103f990610dbe565b60006040518083038185875af1925050503d8060008114610436576040519150601f19603f3d011682016040523d82523d6000602084013e61043b565b606091505b505090508061047f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047690610e30565b60405180910390fd5b50565b6000818154811061049257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610552600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461093f90919063ffffffff16565b1015610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a90610e9c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106c1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561074457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106fa575b5050505050905060005b6001825161075c9190610cb2565b81116107da57600082828151811061077757610776610ce6565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107d290610d15565b91505061074e565b50600067ffffffffffffffff8111156107f6576107f5610d5e565b5b6040519080825280602002602001820160405280156108245781602001602082028036833780820191505090505b506000908051906020019061083a929190610a1b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161086190610dbe565b60006040518083038185875af1925050503d806000811461089e576040519150601f19603f3d011682016040523d82523d6000602084013e6108a3565b606091505b50509050806108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de90610e30565b60405180910390fd5b5050565b6802b5e3af16b188000081565b600080828154811061090d5761090c610ce6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061094b8361097b565b90506000670de0b6b3a764000085836109649190610ebc565b61096e9190610f45565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109c457600080fd5b505afa1580156109d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fc9190611003565b5050509150506402540be40081610a13919061107e565b915050919050565b828054828255906000526020600020908101928215610a94579160200282015b82811115610a935782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a3b565b5b509050610aa19190610aa5565b5090565b5b80821115610abe576000816000905550600101610aa6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610af282610ac7565b9050919050565b610b0281610ae7565b8114610b0d57600080fd5b50565b600081359050610b1f81610af9565b92915050565b600060208284031215610b3b57610b3a610ac2565b5b6000610b4984828501610b10565b91505092915050565b6000819050919050565b610b6581610b52565b82525050565b6000602082019050610b806000830184610b5c565b92915050565b610b8f81610b52565b8114610b9a57600080fd5b50565b600081359050610bac81610b86565b92915050565b600060208284031215610bc857610bc7610ac2565b5b6000610bd684828501610b9d565b91505092915050565b610be881610ae7565b82525050565b6000602082019050610c036000830184610bdf565b92915050565b6000819050919050565b6000610c2e610c29610c2484610ac7565b610c09565b610ac7565b9050919050565b6000610c4082610c13565b9050919050565b6000610c5282610c35565b9050919050565b610c6281610c47565b82525050565b6000602082019050610c7d6000830184610c59565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cbd82610b52565b9150610cc883610b52565b925082821015610cdb57610cda610c83565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d2082610b52565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d5357610d52610c83565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610da8600083610d8d565b9150610db382610d98565b600082019050919050565b6000610dc982610d9b565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610e1a600b83610dd3565b9150610e2582610de4565b602082019050919050565b60006020820190508181036000830152610e4981610e0d565b9050919050565b7f46554e44204d4f52452042414245000000000000000000000000000000000000600082015250565b6000610e86600e83610dd3565b9150610e9182610e50565b602082019050919050565b60006020820190508181036000830152610eb581610e79565b9050919050565b6000610ec782610b52565b9150610ed283610b52565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0b57610f0a610c83565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f5082610b52565b9150610f5b83610b52565b925082610f6b57610f6a610f16565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f9581610f76565b8114610fa057600080fd5b50565b600081519050610fb281610f8c565b92915050565b6000819050919050565b610fcb81610fb8565b8114610fd657600080fd5b50565b600081519050610fe881610fc2565b92915050565b600081519050610ffd81610b86565b92915050565b600080600080600060a0868803121561101f5761101e610ac2565b5b600061102d88828901610fa3565b955050602061103e88828901610fd9565b945050604061104f88828901610fee565b935050606061106088828901610fee565b925050608061107188828901610fa3565b9150509295509295909350565b600061108982610fb8565b915061109483610fb8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110d3576110d2610c83565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111105761110f610c83565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561114d5761114c610c83565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561118a57611189610c83565b5b82820290509291505056fea26469706673582212201b9aa5aeaff4588015aec24710ec06fae6fbd7c171b0d4dfd7bf63930a5fef7564736f6c63430008080033",
  "devdoc": {
    "author": "aboveStars",
    "details": "Contract uses library.",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "Uses library."
      }
    },
    "title": "Contract for funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "To fund..."
      }
    },
    "notice": "It is just a demo",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}